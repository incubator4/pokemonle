"""create type

Revision ID: 55b15f040eed
Revises: 5d8b9dd8865f
Create Date: 2025-04-22 21:20:16.874442

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '55b15f040eed'
down_revision: Union[str, None] = '5d8b9dd8865f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    types = op.create_table('types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identifier', sa.String(length=50), nullable=False),
    sa.Column('generation_id', sa.Integer(), nullable=False),
    sa.Column('damage_class_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['damage_class_id'], ['move_damage_classes.id'], ),
    sa.ForeignKeyConstraint(['generation_id'], ['generations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identifier')
    )
    type_names = op.create_table('type_names',
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('local_language_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['local_language_id'], ['languages.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['types.id'], ),
    sa.PrimaryKeyConstraint('type_id', 'local_language_id')
    )
    from migration.tool import load_csv

    with load_csv("types") as csv_data:
        # id,identifier,generation_id,damage_class_id
        data = [
            {
                "id": int(row["id"]),
                "identifier": row["identifier"],
                "generation_id": int(row["generation_id"]),
                "damage_class_id": int(row["damage_class_id"]) if row["damage_class_id"] else None
            }
            for row in csv_data
        ]
        op.bulk_insert(types, data)

    with load_csv("type_names") as csv_data:
        data = [
            {
                "type_id": int(row["type_id"]),
                "local_language_id": int(row["local_language_id"]),
                "name": row["name"]
            }
            for row in csv_data
        ]
        op.bulk_insert(type_names, data)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('type_names')
    op.drop_table('types')
    # ### end Alembic commands ###
