"""create pokemon species

Revision ID: 9e83773309fd
Revises: afa68bbf4bf5
Create Date: 2025-04-23 12:41:01.163669

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '9e83773309fd'
down_revision: Union[str, None] = 'afa68bbf4bf5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    pokemon_species = op.create_table('pokemon_species',
                                      sa.Column('id', sa.Integer(), nullable=False),
                                      sa.Column('identifier', sa.String(length=50), nullable=False),
                                      sa.Column('generation_id', sa.Integer(), nullable=False),
                                      sa.Column('evolves_from_species_id', sa.Integer(), nullable=True),
                                      sa.Column('evolution_chain_id', sa.Integer(), nullable=True),
                                      sa.Column('color_id', sa.Integer(), nullable=False),
                                      sa.Column('shape_id', sa.Integer(), nullable=False),
                                      sa.Column('habitat_id', sa.Integer(), nullable=True),
                                      sa.Column('gender_rate', sa.Integer(), nullable=True),
                                      sa.Column('capture_rate', sa.Integer(), nullable=True),
                                      sa.Column('base_happiness', sa.Integer(), nullable=True),
                                      sa.Column('is_baby', sa.Boolean(), nullable=False),
                                      sa.Column('hatch_counter', sa.Integer(), nullable=False),
                                      sa.Column('has_gender_differences', sa.Boolean(), nullable=False),
                                      sa.Column('growth_rate_id', sa.Integer(), nullable=False),
                                      sa.Column('forms_switchable', sa.Boolean(), nullable=False),
                                      sa.Column('is_legendary', sa.Boolean(), nullable=False),
                                      sa.Column('is_mythical', sa.Boolean(), nullable=False),
                                      sa.Column('order', sa.Integer(), nullable=False),
                                      sa.Column('conquest_order', sa.Integer(), nullable=True),
                                      sa.ForeignKeyConstraint(['color_id'], ['pokemon_colors.id'], ),
                                      sa.ForeignKeyConstraint(['evolution_chain_id'], ['evolution_chains.id'], ),
                                      sa.ForeignKeyConstraint(['evolves_from_species_id'], ['pokemon_species.id'], ),
                                      sa.ForeignKeyConstraint(['generation_id'], ['generations.id'], ),
                                      sa.ForeignKeyConstraint(['growth_rate_id'], ['growth_rates.id'], ),
                                      sa.ForeignKeyConstraint(['habitat_id'], ['pokemon_habitats.id'], ),
                                      sa.ForeignKeyConstraint(['shape_id'], ['pokemon_shapes.id'], ),
                                      sa.PrimaryKeyConstraint('id')
                                      )
    pokemon = op.create_table('pokemon',
                              sa.Column('id', sa.Integer(), nullable=False),
                              sa.Column('identifier', sa.String(length=50), nullable=False),
                              sa.Column('species_id', sa.Integer(), nullable=False),
                              sa.Column('height', sa.Integer(), nullable=False),
                              sa.Column('weight', sa.Integer(), nullable=False),
                              sa.Column('base_experience', sa.Integer(), nullable=False),
                              sa.Column('order', sa.Integer(), nullable=True),
                              sa.Column('is_default', sa.Boolean(), nullable=False),
                              sa.ForeignKeyConstraint(['species_id'], ['pokemon_species.id'], ),
                              sa.PrimaryKeyConstraint('id')
                              )
    pokemon_species_names = op.create_table('pokemon_species_names',
                                            sa.Column('pokemon_species_id', sa.Integer(), nullable=False),
                                            sa.Column('local_language_id', sa.Integer(), nullable=False),
                                            sa.Column('name', sa.String(length=50), nullable=False),
                                            sa.Column('genus', sa.String(length=50), nullable=False),
                                            sa.ForeignKeyConstraint(['local_language_id'], ['languages.id'], ),
                                            sa.ForeignKeyConstraint(['pokemon_species_id'], ['pokemon_species.id'], ),
                                            sa.PrimaryKeyConstraint('pokemon_species_id', 'local_language_id')
                                            )

    from migration.tool import load_csv

    with load_csv("pokemon_species") as csv_data:
        # id,identifier,generation_id,evolves_from_species_id,evolution_chain_id,color_id,shape_id,habitat_id,gender_rate,capture_rate,base_happiness,is_baby,hatch_counter,has_gender_differences,growth_rate_id,forms_switchable,is_legendary,is_mythical,order,conquest_order
        data = [
            {
                "id": int(row["id"]),
                "identifier": row["identifier"],
                "generation_id": int(row["generation_id"]),
                "evolves_from_species_id": int(row["evolves_from_species_id"]) if row["evolves_from_species_id"] else None,
                "evolution_chain_id": int(row["evolution_chain_id"]) if row["evolution_chain_id"] else None,
                "color_id": int(row["color_id"]),
                "shape_id": int(row["shape_id"]),
                "habitat_id": int(row["habitat_id"]) if row["habitat_id"] else None,
                "gender_rate": int(row["gender_rate"]),
                "capture_rate": int(row["capture_rate"]),
                "base_happiness": int(row["base_happiness"]),
                "is_baby": bool(row["is_baby"]),
                "hatch_counter": int(row["hatch_counter"]),
                "has_gender_differences": bool(row["has_gender_differences"]),
                "growth_rate_id": int(row["growth_rate_id"]),
                "forms_switchable": bool(row["forms_switchable"]),
                "is_legendary": bool(row["is_legendary"]),
                "is_mythical": bool(row["is_mythical"]),
                "order": int(row["order"]),
                "conquest_order": int(row["conquest_order"]) if row["conquest_order"] else None,
            }
            for row in csv_data
        ]
        op.bulk_insert(pokemon_species, data)


    with load_csv("pokemon") as csv_data:
        # id,identifier,species_id,height,weight,base_experience,order,is_default
        data = [
            {
                "id": int(row["id"]),
                "identifier": row["identifier"],
                "species_id": int(row["species_id"]),
                "height": int(row["height"]),
                "weight": int(row["weight"]),
                "base_experience": int(row["base_experience"]),
                "order": int(row["order"]) if row["order"] else None,
                "is_default": bool(row["is_default"]),
            }
            for row in csv_data
        ]
        op.bulk_insert(pokemon, data)

    with load_csv("pokemon_species_names") as csv_data:
        # pokemon_species_id,local_language_id,name,genus
        data = [
            {
                "pokemon_species_id": int(row["pokemon_species_id"]),
                "local_language_id": int(row["local_language_id"]),
                "name": row["name"],
                "genus": row["genus"],
            }
            for row in csv_data
        ]
        op.bulk_insert(pokemon_species_names, data)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pokemon_species_names')
    op.drop_table('pokemon')
    op.drop_table('pokemon_species')
    # ### end Alembic commands ###
