"""create ability

Revision ID: 5068fab41598
Revises: c73a15953d5d
Create Date: 2025-04-22 22:27:13.394474

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5068fab41598'
down_revision: Union[str, None] = 'c73a15953d5d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    abilities = op.create_table('abilities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identifier', sa.String(length=50), nullable=False),
    sa.Column('generation_id', sa.Integer(), nullable=False),
    sa.Column('is_main_series', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['generation_id'], ['generations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identifier')
    )
    ability_flavor_text = op.create_table('ability_flavor_text',
    sa.Column('ability_id', sa.Integer(), nullable=False),
    sa.Column('version_group_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.Column('flavor_text', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['ability_id'], ['abilities.id'], ),
    sa.ForeignKeyConstraint(['language_id'], ['languages.id'], ),
    sa.ForeignKeyConstraint(['version_group_id'], ['version_groups.id'], ),
    sa.PrimaryKeyConstraint('ability_id', 'version_group_id', 'language_id')
    )
    ability_names = op.create_table('ability_names',
    sa.Column('ability_id', sa.Integer(), nullable=False),
    sa.Column('local_language_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['ability_id'], ['abilities.id'], ),
    sa.ForeignKeyConstraint(['local_language_id'], ['languages.id'], ),
    sa.PrimaryKeyConstraint('ability_id', 'local_language_id')
    )

    from migration.tool import load_csv

    with load_csv("abilities") as csv_data:
        # id,identifier,generation_id,is_main_series
        data = [
            {
                "id": int(row["id"]),
                "identifier": row["identifier"],
                "generation_id": int(row["generation_id"]),
                "is_main_series": row["is_main_series"] == "1",
            }
            for row in csv_data
        ]
        op.bulk_insert(abilities, data)

    with load_csv("ability_flavor_text") as csv_data:
        # ability_id,version_group_id,language_id,flavor_text
        data = [
            {
                "ability_id": int(row["ability_id"]),
                "version_group_id": int(row["version_group_id"]),
                "language_id": int(row["language_id"]),
                "flavor_text": row["flavor_text"],
            }
            for row in csv_data
        ]
        op.bulk_insert(ability_flavor_text, data)

    with load_csv("ability_names") as csv_data:
        # ability_id,local_language_id,name
        data = [
            {
                "ability_id": int(row["ability_id"]),
                "local_language_id": int(row["local_language_id"]),
                "name": row["name"],
            }
            for row in csv_data
        ]
        op.bulk_insert(ability_names, data)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ability_names')
    op.drop_table('ability_flavor_text')
    op.drop_table('abilities')
    # ### end Alembic commands ###
